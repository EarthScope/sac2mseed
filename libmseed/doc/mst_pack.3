.TH MST_PACK 3 2006/02/27 "Libmseed API"
.SH DESCRIPTION
Packing of Mini-SEED records from MSTrace segments.

.SH SYNOPSIS
.nf
.B #include <libmseed.h>

.BI "int  \fBmst_pack\fP ( MSTrace *" mst ", void (*" record_handler ") (char *, int),
.BI "                int " reclen ", flag " encoding ", flag " byteorder ",
.BI "                int *" packedsamples ", flag " flush ", flag " verbose ",
.BI "                MSRecord *" mstemplate " );

.BI "int  \fBmsr_packgroup\fP ( MSTraceGroup *" mstg ",
.BI "                     void (*" record_handler ") (char *, int),
.BI "                     int " reclen ", flag " encoding ", flag " byteorder ",
.BI "                     int *" packedsamples ", flag " flush ", flag " verbose ",
.BI "                     MSRecord *" mstemplate " );"
.fi

.SH DESCRIPTION
\fBmst_pack\fP creates (packs) Mini-SEED data records from a MSTrace
segment using the specified record length (\fIreclen\fP), Mini-SEED
\fIencoding\fP and \fIbyteorder\fP.  Using \fImstemplate\fP as a
template, the common header fields and blockettes are packed into a
record header.  If no template will be used \fImstemplate\fP should be
set to NULL.  A Blockette 1000 will be added if one is not present in
the template.  The MSTrace.datasamples array and MSTrace.numsamples value
will be adjusted (reduced) as samples are packed into data records.
This routine will modify the record length, encoding format, byte
order and sequence number of the MSRecord template.  The start time,
sample rate, data array, number of samples and sample type of the
MSRecord template are preserved.

Default values will be used for any of the key characteristics of
record length, encoding format and byte order that are -1.  The
default values are: reclen = 4096 bytes, encoding = 11 (Steim2) and
byteorder = 1 (MSBF or big-endian).

\fIreclen\fP should be set to the desired data record length in bytes
which must be expressible as 2 raised to the power of X where X is
between (and including) 8 to 20.

\fIencoding\fP should be set to one of the following supported
Mini-SEED data encoding formats: ASCII (0), INT16 (1), INT32 (3),
FLOAT32 (4), FLOAT64 (5), STEIM1 (10) and STEIM2 (11).
MSTrace.sampletype should indicated the sample type as either 'a'
(ASCII), 'i' (32-bit integers), 'f' (32-bit floats) or 'd' (64-bit
doubles).

The encoding format must be appropriate for the sample type of the
MSTrace samples.  For example, Steim compression and integer encoding
formats must be used with integer samples and float encoding formats
require the appropriate size floats as input.  As a counter example,
float samples cannot be packed using Steim compression or integer
encoding formats.

\fIbyteorder\fP must be either 0 (LSBF or little-endian) or 1 (MBF or
big-endian).

Each time a complete record is packed it will be passed to the
\fIrecord_handler()\fP function along with it's length in bytes.  It
is the responsibility of \fIrecord_handler()\fP to process the record,
the memory will be re-used or freed when \fIrecord_handler()\fP
returns.

The integer pointed to by \fIpackedsamples\fP will be set to the total
number of samples packed.

If the \fIflush\fP flag is not zero all of the data will be packed
into records, otherwise records will only be packed while there are
enough data samples to completely fill a record.

The \fIverbose\fP flag controls verbosity, a value of zero will result
in no diagnostic output.

\fBmst_packgroup\fP simply calls \fBmst_pack\fP for each MSTrace in the
specified MSTraceGroup.  The integer pointed to by \fIpackedsamples\fP
will be set to the total number of samples packed.

.SH RETURN VALUES
\fBmst_pack\fP returns the number records created on success and -1 on
error.

\fBmsr_packgroup\fP returns the total (for all MSTraces) number of
record created on success and -1 on error.

.SH CAVEATS
When using a MSRecord template (\fImstemplate\fP) the dataquality
element must be set to a valid value.  It is also advisable to set the
network, station, location and channel indicators to appropriate
values.  Unless these source indicators need to change they can simply
be copied from the matching MSTrace elements.

.SH EXAMPLE
Skeleton code for creating (packing) Mini-SEED records with
mst_pack(3):

.nf
static void record_handler (char *record, int reclen) {
  if ( fwrite(record, reclen, 1, outfile) != 1 )
    {
      fprintf (stderr, "Error writing to output file\n");
    }
}

main() {
  int psamples;
  int precords;
  MSTrace *mst;

  mst = mst_init (NULL);

  /* Populate MSTrace values */
  strcpy (mst->network, "XX");
  strcpy (mst->station, "TEST");
  strcpy (mst->channel, "BHE");
  mst->starttime = ms_seedtimestr2hptime ("2004,350,00:00:00.000000");
  mst->samprate = 40.0;

  /* The datasamples pointer and numsamples counter will be adjusted by
     the packing routine, the datasamples array must be dynamic memory
     allocated by the malloc() family of routines. */
  mst->datasamples = dataptr; /* pointer to 32-bit integer data samples */  
  mst->numsamples = 1234;
  mst->sampletype = 'i';      /* declare type to be 32-bit integers */

  /* Pack 4096 byte, big-endian records, using Steim-2 compression */
  precords = mst_pack (mst, &record_handler, 4096, STEIM2, 1, &psamples, 1, verbose, NULL);

  printf ("Packed %d samples into %d records\n", psamples, precords);

  mst_free (&mst);
}
.fi

.SH SEE ALSO
\fBms_intro(3)\fP and \fBmsr_pack(3)\fP.

.SH AUTHOR
.nf
Chad Trabant
IRIS Data Management Center
.fi
